name: Build and Package HUNGER Restaurant Billing System

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: false
        type: boolean

jobs:
  build-windows:
    runs-on: windows-latest
    name: Build Windows Package
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.7'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r mobile_backend/requirements.txt
        
    - name: Test application
      run: |
        python -c "from restaurant_billing.db import init_db; init_db(); print('Database test passed')"
        python -c "from restaurant_billing.app import bootstrap; print('Application import test passed')"
        
    - name: Create Windows installer package
      run: |
        # Create distribution directory
        mkdir dist\hunger-restaurant-billing
        mkdir dist\hunger-restaurant-billing\data
        mkdir dist\hunger-restaurant-billing\mobile_backend
        
        # Copy application files
        xcopy /E /I /Y restaurant_billing dist\hunger-restaurant-billing\restaurant_billing
        xcopy /E /I /Y mobile_backend dist\hunger-restaurant-billing\mobile_backend
        copy main.py dist\hunger-restaurant-billing\
        copy requirements.txt dist\hunger-restaurant-billing\
        copy mobile_backend\requirements.txt dist\hunger-restaurant-billing\mobile_backend\
        
        # Copy installation scripts
        copy install_windows.bat dist\hunger-restaurant-billing\
        copy install_simple.bat dist\hunger-restaurant-billing\
        copy install_everything.bat dist\hunger-restaurant-billing\
        copy install_everything.ps1 dist\hunger-restaurant-billing\
        copy install_with_database.bat dist\hunger-restaurant-billing\
        copy uninstall.ps1 dist\hunger-restaurant-billing\
        
        # Copy documentation
        copy README.md dist\hunger-restaurant-billing\
        copy INSTALLATION_QUICK_START.md dist\hunger-restaurant-billing\
        copy DATABASE_INFO.md dist\hunger-restaurant-billing\
        copy INSTALLATION_SUMMARY.md dist\hunger-restaurant-billing\
        copy PRODUCTION_READINESS.md dist\hunger-restaurant-billing\
        copy AUTOMATIC_UPDATES.md dist\hunger-restaurant-billing\
        
        # Create simple installer with install.bat in root
        echo Creating simple installer with install.bat in root...
        python create_simple_installer.py
        
        # Copy the simple installer files to the main package
        if exist "dist\simple-installer\install.bat" (
            copy "dist\simple-installer\install.bat" dist\hunger-restaurant-billing\
            echo install.bat copied to root directory
        ) else (
            echo Warning: install.bat not found in simple installer
        )
        
        # Create GUI installer
        echo Creating GUI installer...
        python create_simple_gui_installer.py
        
        # Copy the GUI installer to the main package
        if exist "dist\simple-gui-installer\install.bat" (
            copy "dist\simple-gui-installer\install.bat" dist\hunger-restaurant-billing\install_gui.bat
            copy "dist\simple-gui-installer\installer_gui.py" dist\hunger-restaurant-billing\
            echo GUI installer copied to main package
        ) else (
            echo Warning: GUI installer not found
        )
        
        # Create Python virtual environment
        python -m venv dist\hunger-restaurant-billing\venv
        
        # Install dependencies in venv
        dist\hunger-restaurant-billing\venv\Scripts\activate
        dist\hunger-restaurant-billing\venv\Scripts\python.exe -m pip install --upgrade pip
        dist\hunger-restaurant-billing\venv\Scripts\python.exe -m pip install -r requirements.txt
        dist\hunger-restaurant-billing\venv\Scripts\python.exe -m pip install -r mobile_backend\requirements.txt
        
        # Create launcher scripts
        echo @echo off > dist\hunger-restaurant-billing\start_desktop.bat
        echo cd /d "%%~dp0" >> dist\hunger-restaurant-billing\start_desktop.bat
        echo venv\Scripts\python.exe main.py >> dist\hunger-restaurant-billing\start_desktop.bat
        echo pause >> dist\hunger-restaurant-billing\start_desktop.bat
        
        echo @echo off > dist\hunger-restaurant-billing\start_mobile.bat
        echo cd /d "%%~dp0\mobile_backend" >> dist\hunger-restaurant-billing\start_mobile.bat
        echo ..\venv\Scripts\python.exe main.py >> dist\hunger-restaurant-billing\start_mobile.bat
        echo pause >> dist\hunger-restaurant-billing\start_mobile.bat
        
        # Initialize database
        dist\hunger-restaurant-billing\venv\Scripts\python.exe -c "from restaurant_billing.db import init_db; init_db(); print('Database initialized')"
        
    - name: Create ZIP package
      run: |
        powershell -Command "Compress-Archive -Path 'dist\hunger-restaurant-billing\*' -DestinationPath 'dist\HUNGER-Restaurant-Billing-Windows.zip' -Force"
        
    - name: Upload Windows package
      uses: actions/upload-artifact@v4
      with:
        name: hunger-restaurant-billing-windows
        path: dist/HUNGER-Restaurant-Billing-Windows.zip
        

  create-release:
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.create_release)
    needs: [build-windows]
    runs-on: ubuntu-latest
    name: Create Release Assets
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Create release assets
      run: |
        # Create release directory
        mkdir -p release-assets
        
        # Copy Windows package
        cp hunger-restaurant-billing-windows/HUNGER-Restaurant-Billing-Windows.zip release-assets/
        
        # Create installation instructions
        cat > release-assets/INSTALLATION_INSTRUCTIONS.md << 'EOF'
        # HUNGER Restaurant Billing System - Installation Instructions
        
        ## Windows Installation
        1. Download `HUNGER-Restaurant-Billing-Windows.zip`
        2. Extract the ZIP file to your desired location
        3. **Right-click** `install.bat` and select "Run as Administrator"
        4. Follow the installation prompts
        5. Launch from desktop shortcut or run `start_desktop.bat`
        
        ## What Gets Installed
        - Python 3.11.7 (if not already present)
        - Git for Windows (if not already present)
        - Desktop billing application
        - SQLite Database (built-in)
        - Desktop shortcuts
        - Start menu entries
        
        ## Default Login Credentials
        - Username: `owner`
        - Password: `1234`
        EOF
        
    - name: Upload release assets
      uses: actions/upload-artifact@v3
      with:
        name: release-assets
        path: release-assets/
        
    - name: Create GitHub Release
      if: github.event_name == 'workflow_dispatch' && inputs.create_release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          ## HUNGER Restaurant Billing System v${{ github.run_number }}
          
          ### What's New
          - Automated build and packaging for Windows
          - Self-contained package with virtual environment
          - Easy installation with install.bat in root directory
          - Automatic Python and Git installation
          
          ### Downloads
          - **Windows**: HUNGER-Restaurant-Billing-Windows.zip
          
          ### Installation
          See INSTALLATION_INSTRUCTIONS.md for detailed installation steps.
          
          ### Default Login
          - Username: `owner`
          - Password: `1234`
        files: release-assets/*
        draft: false
        prerelease: false
